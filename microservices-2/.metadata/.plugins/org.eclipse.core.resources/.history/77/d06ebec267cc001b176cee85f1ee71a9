package com.sri.photoapp.feignproxy;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.sri.photoapp.ui.model.AlbumResponseModel;

//@FeignClient(name = "ALBUMS-WS",fallback = AlbumsFallBack.class)
@FeignClient(name = "ALBUMS-WS",fallback = AlbumsFallBackFactory.class)
public interface FeignProxy {

	@GetMapping(produces = { MediaType.APPLICATION_JSON_VALUE
//	                MediaType.APPLICATION_XML_VALUE,
	}, path = "/users/{id}/albums")
	public List<AlbumResponseModel> userAlbums(@PathVariable String id);
}

@Component
class AlbumsFallBack implements FeignProxy {

	// if the feign proxy is down [Albums-ws] then this fallback method is called

	@Override
	public List<AlbumResponseModel> userAlbums(String id) {
		return Arrays.asList(new AlbumResponseModel("feign-fallback", id, "fallback-name", "fall-back response"));
	}

}